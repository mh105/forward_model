#!/bin/bash

#Note the start time
start=$(date +%s)

#Setup paths
FSLDIR=/Users/alexhe/Applications/fsl
CODEDIR=/Users/alexhe/Dropbox/Mac_Desktop/MIT_HST/NSRL_Purdon_Prerau/EEG/code/forward_model
CURRDIR=$PWD

MAINDIR=/Users/alexhe/Dropbox/Mac_Desktop/MIT_HST/NSRL_Purdon_Prerau/forward_modeling/4layer_BEM/sample_mesh/pipelines
HEADRECODIR=$MAINDIR/headreco
M2MDIR=$MAINDIR/mri2mesh
BEMDIR=$MAINDIR/bem_surfaces
RECONDIR=/Users/alexhe/Dropbox_Personal/Mac_Desktop/MIT_HST/NSRL_Purdon_Prerau/MNE/subject_data/SLEEP_TDEL_recon







#################################
#
# make bem_surfaces folder
#
#################################

cd $MAINDIR
mkdir bem_surfaces
cd bem_surfaces
mkdir raw_surface raw_volume final_surface final_surface_mat    







#################################
#
# MNE surface processing
#
#################################

#Move the T1.mgz file
cp $RECONDIR/mri/T1.mgz $BEMDIR/raw_volume/T1.mgz

#Move the relevant MNE surfaces to raw_surface folder
cp $RECONDIR/bem/outer_skull.surf $BEMDIR/raw_surface/MNE_outer_skull.surf
cp $RECONDIR/bem/outer_skin.surf $BEMDIR/raw_surface/MNE_outer_skin.surf

#Update MNE_outer_skull.surf with volume geometry info from T1.mgz
cd $BEMDIR/raw_surface
mris_convert --vol-geom ../raw_volume/T1.mgz MNE_outer_skull.surf MNE_outer_skull.surf
cp rh.MNE_outer_skull.surf $BEMDIR/final_surface/MNE_outer_skull.surf
cp MNE_outer_skin.surf $BEMDIR/final_surface/MNE_outer_skin.surf
rm rh* 







#################################
#
# headreco surface processing
#
#################################
 
#Convert .stl files to .surf format
mris_convert $HEADRECODIR/m2m*/skin.stl $BEMDIR/raw_surface/headreco_skin.surf
mris_convert $HEADRECODIR/m2m*/bone.stl $BEMDIR/raw_surface/headreco_bone.surf

#Update surfaces with volume geometry info from T1.mgz
mris_convert --vol-geom ../raw_volume/T1.mgz headreco_skin.surf headreco_skin.surf
mris_convert --to-tkr rh.headreco_skin.surf rh.headreco_skin.surf
cp rh.headreco_skin.surf $BEMDIR/final_surface/headreco_skin.surf
mris_convert --vol-geom ../raw_volume/T1.mgz headreco_bone.surf headreco_bone.surf
mris_convert --to-tkr rh.headreco_bone.surf rh.headreco_bone.surf
cp rh.headreco_bone.surf $BEMDIR/final_surface/headreco_bone.surf
rm rh* 







#################################
#
# mri2mesh surface processing
#
#################################

#Convert .stl files to .surf format
mris_convert $M2MDIR/m2m*/wm.stl $BEMDIR/raw_surface/mri2mesh_wm.surf
mris_convert $M2MDIR/m2m*/gm.stl $BEMDIR/raw_surface/mri2mesh_gm.surf
mris_convert $M2MDIR/m2m*/csf.stl $BEMDIR/raw_surface/mri2mesh_csf.surf
mris_convert $M2MDIR/m2m*/cerebellum.stl $BEMDIR/raw_surface/mri2mesh_cerebellum.surf
mris_convert $M2MDIR/m2m*/skull.stl $BEMDIR/raw_surface/mri2mesh_skull.surf

#Move the recon T1 volume to the raw_volume folder
cp $M2MDIR/m2m*/T1fs_resamp.nii.gz $BEMDIR/raw_volume/tmp_T1fs_resamp.nii.gz

#Move the mri2mesh recon white matter surfaces to the raw_surface folder
cp $M2MDIR/fs*/surf/lh.white $BEMDIR/raw_surface/mri2mesh_fs_lh_wm.surf
cp $M2MDIR/fs*/surf/rh.white $BEMDIR/raw_surface/mri2mesh_fs_rh_wm.surf

#Prepare coordinates for calculating translation matrix
cd $BEMDIR/raw_volume
mri_convert T1.mgz tmp_T1.nii.gz
fslswapdim tmp_T1fs_resamp.nii.gz x -z y tmp_T1fs_swap.nii.gz
flirt -in tmp_T1fs_swap.nii -ref tmp_T1.nii.gz -out tmp_T1fs_swap_flirt.nii -omat tmp_xform.mat -schedule $FSLDIR/etc/flirtsch/xyztrans.sch
printf "0-0-0" > tmp_origin.txt 
mri_info T1.mgz --cras >> tmp_textout.txt
cat tmp_origin.txt | img2imgcoord -src tmp_T1fs_swap.nii -dest tmp_T1fs_swap_flirt.nii -xfm tmp_xform.mat -mm >> tmp_textout.txt
sed '2d' tmp_textout.txt > tmp_offset.txt

#Run the python script for fixing the mri2mesh surfaces using the coordinates in temp_offset
cp $BEMDIR/raw_volume/tmp_offset.txt $BEMDIR/raw_surface/tmp_offset.txt
cd $BEMDIR/raw_surface
python $CODEDIR/fix_mri2mesh_surface.py

#Update these fixed surfaces with volume geometry info from T1.mgz
mris_convert --vol-geom ../raw_volume/T1.mgz mri2mesh_wm_fixed.surf mri2mesh_wm_fixed.surf
mris_convert --vol-geom ../raw_volume/T1.mgz mri2mesh_gm_fixed.surf mri2mesh_gm_fixed.surf
mris_convert --vol-geom ../raw_volume/T1.mgz mri2mesh_csf_fixed.surf mri2mesh_csf_fixed.surf
mris_convert --vol-geom ../raw_volume/T1.mgz mri2mesh_cerebellum_fixed.surf mri2mesh_cerebellum_fixed.surf
mris_convert --vol-geom ../raw_volume/T1.mgz mri2mesh_skull_fixed.surf mri2mesh_skull_fixed.surf

mris_convert --vol-geom ../raw_volume/T1.mgz mri2mesh_fs_lh_wm_fixed.surf mri2mesh_fs_lh_wm_fixed.surf
mris_convert --vol-geom ../raw_volume/T1.mgz mri2mesh_fs_rh_wm_fixed.surf mri2mesh_fs_rh_wm_fixed.surf

#Move the finished surfaces to final_surface folder
mv rh.mri2mesh_wm_fixed.surf $BEMDIR/final_surface/mri2mesh_wm_fixed.surf
mv rh.mri2mesh_gm_fixed.surf $BEMDIR/final_surface/mri2mesh_gm_fixed.surf
mv rh.mri2mesh_csf_fixed.surf $BEMDIR/final_surface/mri2mesh_csf_fixed.surf
mv rh.mri2mesh_cerebellum_fixed.surf $BEMDIR/final_surface/mri2mesh_cerebellum_fixed.surf
mv rh.mri2mesh_skull_fixed.surf $BEMDIR/final_surface/mri2mesh_skull_fixed.surf

mv rh.mri2mesh_fs_lh_wm_fixed.surf $BEMDIR/final_surface/mri2mesh_fs_lh_wm_fixed.surf
mv rh.mri2mesh_fs_rh_wm_fixed.surf $BEMDIR/final_surface/mri2mesh_fs_rh_wm_fixed.surf

#Remove temporary files
rm tmp* 
rm *_fixed.surf
cd $BEMDIR/raw_volume
rm tmp*   







#################################
#
# set up source space
#
#################################

cd $BEMDIR/final_surface
mkdir temp_recon
mkdir temp_recon/surf
cp mri2mesh_fs_lh_wm_fixed.surf temp_recon/surf/lh.white
cp $M2MDIR/fs*/surf/lh.sphere temp_recon/surf/lh.sphere
cp mri2mesh_fs_rh_wm_fixed.surf temp_recon/surf/rh.white   
cp $M2MDIR/fs*/surf/rh.sphere temp_recon/surf/rh.sphere

python $CODEDIR/set_up_source.py

#Move to the final_structure folder
mv ico5-src.fif ../final_structure/ico5-src.fif
mv ico5-src.mat ../final_structure/ico5-src.mat

#Remove the temporary recon folder
rm -r temp_recon  

#Save all .surf files to .mat 
python $CODEDIR/surf2mat.py
mv *.mat ../final_structure/*.mat 







#Go back to the original directory
cd $CURRDIR 

# Report time taken to run this script 

secs_to_human() {
    if [[ -z ${1} || ${1} -lt 60 ]] ;then
        min=0 ; secs="${1}"
    else
        time_mins=$(echo "scale=2; ${1}/60" | bc)
        min=$(echo ${time_mins} | cut -d'.' -f1)
        secs="0.$(echo ${time_mins} | cut -d'.' -f2)"
        secs=$(echo ${secs}*60|bc|awk '{print int($1+0.5)}')
    fi
    echo "Time taken for meshing : ${min} minutes and ${secs} seconds."
}

secs_to_human "$(($(date +%s) - ${start}))"






